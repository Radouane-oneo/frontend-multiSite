<?php
use printconnect\Carts\Factory;
//use printconnect\Designer\Upload\Factory;
function pcdesigner_menu() {
  $items['upload-design/%'] = array(
      'title' => 'Upload design',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pcdesigner_upload_form', 1),
      'access arguments' => array('access content'),
      'file' => 'pcdesigner.forms.inc',
  );
  $items['upload-design/callback'] = array(
      'title' => 'Designtool callback',
      'page callback' => '_pcdesigner_designtool_callback',
      'page arguments' => array(),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );

  $items['js/upload-design/designer/email/%'] = array(
      'title' => 'Designtool callback',
      'page callback' => '_pcdesigner_email_callback',
      'page arguments' => array(4),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['upload-design/setstatusapprove/%'] = array(
    'page callback' => '_pcdesigner_callback_setstatusapprove',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
);
  return $items;
}
function _pcdesigner_callback_setstatusapprove($jobId) {
//    $itemId = $_POST['id'];
//    $email = $_POST['email'];

   
$response = \printconnect\Designer\Upload\Factory::changeStatus($jobId);

    if($response) {
        Dal::BuildJson();
    }else {
        Dal::BuildJson(array(), 500);
    }
}
function _pcdesigner_email_callback($email){
 echo  json_encode(valid_email_address($email));die;
}

function _pcdesigner_designtool_callback() {
  $file = $_GET['fileid'];
  $thumbnail = $_GET['thumbid'];
  $id = $_GET['id'];
  $jobId = $_GET['jobid'];
  $controlpro = isset($_GET['controlpro']) ? $_GET['controlpro'] : 0;
  $quickupload = isset($_GET['quickupload']) ? $_GET['quickupload'] : 0;
  
  $upload = \printconnect\Designer\Upload\Factory::Get($id);

  $upload->EnsureLoaded();
  $upload->file = $file;
  $upload->thumbnail = $thumbnail;
  $upload->design_tool_job_id = $jobId;

  $upload->controlpro = $controlpro;
  $upload->quickupload = $quickupload;

  \printconnect\Designer\Upload\Factory::Save($upload);
  print update_domain();
  print '<script type="text/javascript">top.location = top.location;</script>';
  exit;
}

function pcdesigner_form_alter(&$form, $form_state, $form_id) {

  switch ($form_id) {
    case 'pccart_cart_form2':
      $cart = $form_state['storage']['cart'];
      $checkableItems = array();
      $emailDesigner = FALSE;
      if ($cart && count($cart->productItems)) {
        foreach ($cart->productItems as $item) {
          if (!count($item->files)){
             $emailDesigner = $item->emailDesigner;
            $form['cart']['items'][$item->id]['ready']['designer']['check'] = array(
                '#type' => 'checkbox',
                '#title' => t('I will not upload a design. My designer will do it for me.'),
                '#default_value' => $item->emailDesigner,
            );

            $checkableItems[] = $item->id;
          }

            $form['cart']['items'][$item->id]['ready']['designer']['inputdesigner'] = array(
                '#type' => 'container',
                '#attributes' => array('class' => array('clearfix','inputdesigner')),
            );
            $form['cart']['items'][$item->id]['ready']['designer']['inputdesigner']['email'] = array(
                '#type' => 'textfield',
                '#title' => t('Email address designer'),
                '#attributes' => array('class' => array('inputdesigneremail')),
                '#size'=> 50,
                '#required' => FALSE,
                '#default_value' => $emailDesigner,
            );
            $form['cart']['items'][$item->id]['ready']['designer']['inputdesigner']['warning'] = array(
                '#type' => 'item',
                '#id' => 'edit-cart-designer-warning',
                '#markup' => t('Attention! If you don`t upload your files now, we cannot guarantee the estimated delivery date. You will be informed when your designer uploads the file.'),
            );
        }
      }

      break;
  }
}

function pcdesigner_form_submit($form, &$form_state){
//  $cart = Factory::Current();
//    unset($form_state['values']['cart']['items']['hidden']);
//    foreach (element_children($form_state['values']['cart']['items']) as $key) {
//    $item = \printconnect\Carts\Factory::GetItem($cart, $key);
//    $item->EnsureLoaded();
//
//    if (isset($form_state['values']['cart']['items'][$key]["ready"]['designer']) && $form_state['values']['cart']['items'][$key]["ready"]['designer']['check']) {
//        $item->emailDesigner = $form_state['values']['cart']['items'][$key]["ready"]['designer']['inputdesigner']['email'];
//    } else {
//
//      $item->Remove('emailDesigner');
//    }
//   
//    \printconnect\Carts\Factory::SaveItem($item, $item->customWidth, $item->customHeight);
//    
//  }
//
//  unset($_SESSION['pcdesigner']['email']);
}

function pcdesigner_form_validate($form, &$form_state) {
  $cart = $form_state['storage']['cart'];
  $checkEmailIsValid = false;
  foreach ($cart->productItems as $item) {
    if (array_key_exists($item->id, $form_state['values']['cart']['items'])
            && isset($form_state['values']['cart']['items'][$item->id]['designer']['inputdesigner']['email'])
            && $form_state['values']['cart']['items'][$item->id]['designer']['check']
    ) {
      $checkEmailIsValid = true;
    }
    die('ryryry');
   \printconnect\Carts\Factory::SaveItem($item);
  }

}



