<?php

function pcflyerstores_init(){   
global $language;
$shopConfig = \printconnect\Shop\Configuration\Factory::Current();
$defaultCountry = \printconnect\Countries\Factory::Get($shopConfig->defaultCountry);
$defaultCountryCode = $defaultCountry->iso;
$mapLanguage =  $language->language == 'fr-Be' ? 'fr' : 'nl';
drupal_add_js('https://maps.googleapis.com/maps/api/js?key=AIzaSyBS0SrsMbBXJ_v2kkgCvbiqwFUatl1pd_s&sensor=true&language='.$mapLanguage,'external');
drupal_add_js('https://maps.googleapis.com/maps/api/js?libraries=geometry,places', 'external');
$_SESSION["CountryCode"] = $defaultCountryCode;
$_SESSION["stores"] = \printconnect\Stores\Factory::Find($defaultCountryCode, $region, $postalcode);

}
function pcflyerstores_menu() {
    $items['stores/picker'] = array(
        'title' => 'Picker',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_picker_form'),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
        'type' => MENU_CALLBACK,
    );

    $items['stores/picker/%'] = array(
        'title' => 'Picker',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_picker_form', 2),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
        'type' => MENU_CALLBACK,
    );

    $items['stores/picker/%/%'] = array(
        'title' => 'Picker',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_picker_form', 2, 3),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
        'type' => MENU_CALLBACK,
    );

    $items['stores/picker/callback/%'] = array(
        'title' => 'Picker',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_picker_form', NULL, NULL, 3),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
    );

    $items['stores/picker/callback/%/%'] = array(
        'title' => 'Picker',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_picker_form', 4, NULL, 3),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
    );
    
    $items['js/stores/picker/%'] = array(
        'title' => 'Picker',
        'page callback' => 'pcflyerstores_picker_js_callback',
        'page arguments' => array(3),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['js/stores/picker/%/%'] = array(
        'title' => 'Picker',
        'page callback' => 'pcflyerstores_picker_js_callback',
        'page arguments' => array(3, 4),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['js/stores/%'] = array(
        'title' => 'StoreInfo',
        'page callback' => 'pcflyerstores_picker_js_storeinfo_callback',
        'page arguments' => array(2),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['storesinfo/%'] = array(
        'title' => 'Store',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_detail_form', 1),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
    );
    
    $items['flyerstores/%'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_landingpage_form', 1),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
        'type' => MENU_CALLBACK,
    );
    
       $items['mystores'] = array(
        'title' => t('flayerstors search'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pcflyerstores_search_form', 1),
        'access arguments' => array('access content'),
        'file' => 'pcflyerstores.forms.inc',
        'type' => MENU_CALLBACK,
    );
   
   $items['js/stores/picker/cart/set1/%'] = array(
        'title' => 'Picker',
        'page callback' => 'pcflyerstores_picker_callback',
        'page arguments' => array(5),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function pcflyerstores_theme() {
    return array(
        'pcflyerstores_store_info' => array(
            'variables' => array(
                'store' => FALSE,
                'attributes' => array(),
                'selectable' => FALSE,
            ),
        ),
 
        'pcflyerstores_store_summary' => array(
            'variables' => array(
                'store' => FALSE,
                'attributes' => array(),
                'selectable' => FALSE,
            ),
        ),
        'pcflyerstores_store_detail' => array(
            'variables' => array(
                'store' => FALSE,
                'attributes' => array(),
                'selectable' => FALSE,
            ),
        ),
        'pcflyerstores_picker_link' => array(
            'variables' => array(
                'title' => FALSE,
                'callback' => FALSE,
                'attributes' => array(),
            ),
        ),
        'pcflyerstores_store_link' => array(
            'variables' => array(
                'store' => FALSE,
                'title' => FALSE,
                'attributes' => array(),
            ),
        ),

        'pcflyerstores_landingpage_info' => array(
            'variables' => array(
                'store' => FALSE,
                'title' => FALSE,
                'attributes' => array(),
            ),
        ),
        
         'pcflyerstores_search_info' => array(
            'variables' => array(
                'store' => FALSE,
                'title' => FALSE,
                'attributes' => array(),
            ),
        ),
        
    );
}

function theme_pcflyerstores_store_info($vars) {
    $store = $vars['store'];
    $attributes = $vars['attributes'];
    $attributes['class'][] = 'store';
    $attributes['class'][] = 'clearfix';
    $attributes['id'][] = 'allresault';
    $html = '<div ' . drupal_attributes($attributes) . '> ';

    if ($store) {
        $store->EnsureLoaded();

        if (isset($store->country) && isset($store->city) && isset($store->address)) {
            $googleMapsAddressString = urlencode($store->country) . ',' . urlencode($store->city) . ',' . urlencode($store->address);
            $icon = file_create_url(drupal_get_path('module', 'pcflyerstores') . '/store.png') . '?' . variable_get('css_js_query_string', '');
            $html .= '<div id="map-canvas" style="height:48%">
                    </div>';
        }
        $html .= '<div class="description stordescription"><div class="storcomande">';
        if (isset($store->name)) {
            $storeName =  html_entity_decode(t($store->name),ENT_COMPAT,"iso-8859-1");
            $html .= '<h2>' .  $storeName. '</h2>';
        }

	$html .='<div id="storethumb"></div>';
        
        $html .= '<div id="detail">';
   
        if (isset($store->address) && isset($store->postalCode) && isset($store->city)) {
            $html .= '<div class="address">' . t($store->address) . ' - ' . $store->postalCode . ' ' . $store->city . '</div>';
        }
        if ($store->phone) {
            $html .= '<div class="phone">' . htmlentities($store->phone) . '</div>';
        }
        if ($store->fax) {
            $html .= '<div class="fax">' . htmlentities($store->fax) . '</div>';
        }
        if ($store->email) {
          $html .= '<div class="email"><a href="mailto:'.$store->email.'">' . htmlentities($store->email) . '</a></div>';
        }

        if ($store->site) {
             $html .= '<div class="site"><a href="'.$store->site.'" target="_blank">' . htmlentities($store->site) . '</a></div>';
         }

        $html .= '</div>';

        $html .= '<div class="separateur">';
        $rows = array();
        if (isset($store->openingHours)) {
            foreach ($store->openingHours as $day => $hours) {
                if ($hours) {
                    $rows[] = array(t($day), $hours);
                }
            }

            if (count($rows)) {
                $html .= theme(
                    'table', array(
                    'rows' => $rows,
                    'caption' => t('Opening hours'),
                    'attributes' => array(
                        'class' => array(
                            'openinghours'
                        )
                    )
                        )
                );
            }
        }
        $html .= '</div>';
        
        $html .= '<div id="Mapimg">';
        if (isset($store->country) && isset($store->city) && isset($store->address)) {
            $googleMapsAddressString = urlencode($store->country) . ',' . urlencode($store->city) . ',' . urlencode($store->address);
            $link = 'http://maps.google.com/maps?q=' . $googleMapsAddressString;
            $icon = file_create_url(drupal_get_path('module', 'pcflyerstores') . '/store.png') . '?' . variable_get('css_js_query_string', '');
            $map = theme('image', array('path' => 'https://maps.googleapis.com/maps/api/staticmap?size=640x160&sensor=false&markers=icon:' . $icon . '|' . $googleMapsAddressString, 'attributes' => array('class' => array('map'))));
            $html .= l($map, $link, array('html' => true, 'attributes' => array('target' => '_blank', 'class' => 'mapContainer')));
        }
        $html .= '</div>';
        
        if (isset($store->country) && isset($store->city) && isset($store->address)) {
            $googleMapsAddressString = urlencode($store->country) . ',' . urlencode($store->city) . ',' . urlencode($store->address);
            $link = 'https://maps.google.com/maps?q=' . $googleMapsAddressString;
            $html .= l(NULL, $link, array('html' => true, 'attributes' => array('target' => '_blank', 'class' => 'mapContainer')));
        }
        

        $html .= '</div>';

     
        $vacations = array();
        
        if (isset($store->vacations)) {
            foreach ($store->vacations as $vacation) {
                if ($vacation) {
                    $vacations[] = array(
                        format_date(
                           strtotime($vacation->startDate), 'custom', 'D, d/m/Y'
                        ),
                        '-',
                        format_date(
                           strtotime($vacation->endDate), 'custom', 'D, d/m/Y'
                        )
                    );
                }
            }
            if (isset($store->info)) {
                $html .= '<div class="info_vacations">';
                $html .= '<spen>'.t('info').'</spen>:<br>';
                $html .= t($store->info);
                $html .= '</div>';
            }
            if (count($vacations)) {
                $html .= theme(
                        'table', array(
                    'rows' => $vacations,
                    'caption' => t('ON Vacation !'),
                    'attributes' => array(
                        'class' => array(
                            'vacations'
                        )
                    )
                        )
                );
            }
        }


        $html .= '</div>';
    }

    $html .= '</div>';

    return $html;
}

function theme_pcflyerstores_store_summary($vars) {
    $store = $vars['store'];
    $attributes = $vars['attributes'];
    $attributes['class'][] = 'pcflyerstores-store-link';
    $attributes['id'] = $store->id;

    $html = '';
    if ($store) {
        $url = 'stores/' . $store->id;
        $html .= '<span id="store_id_'.$store->id.'"  class="place" city="'.$store->city.'" postalCode="'.$store->postalCode.'"  po="'.$store->po.'" position="'.$store->latitude.'_'.$store->longitude.'">' . $store->city . ' </span><br/><span class="name">' . $store->name . '</span> <br/>' . $store->postalCode;
    }
    return l($html, $url, array('attributes' => $attributes, 'html' => TRUE));
}

function theme_pcflyerstores_store_detail($vars) {
    $store = $vars['store'];

    $html = '';
    $resolt = array();
    $resolt[] = array('#markup' =>'<div class="treediv"><ul>', );
    asort($store);

   
    foreach ($store as $key =>$value) {
       
        $url = 'flyerstores/' . $key;
        $html = '<li><a href="'.$url.'"><span class="name zoneaccordion" postalCode ="'.$value['postalCode'].'">' . $value['city'] . '</span></a></li>';
        $build = array('#markup' =>$html ); 
        $resolt[] = $build;
    }
    $resolt[] = array('#markup' =>'</ul></div>', );
    return drupal_render($resolt);
}

function theme_pcflyerstores_picker_link($vars) {
    $vars['attributes']['class'][] = 'pcflyerstores-picker-link';
    $vars['attributes']['class'][] = 'iframe';
    $vars['query']['contentonly'] = TRUE;

    $url = 'stores/picker';
    if ($vars['callback']) {
        $url .= '/callback/' . $vars['callback'];
    }
    $shopConfig = \printconnect\Shop\Configuration\Factory::Current();
    $defaultCountry = \printconnect\Countries\Factory::Get($shopConfig->defaultCountry);
    $defaultCountryCode = $defaultCountry->iso;
    $url .= '/' . $defaultCountryCode;

    if (!$vars['title']) {
        $title = t('Choose your store');
    } else {
        $title = $vars['title'];
    }

    $build = array(
        'link' => array('#markup' => l($title, $url, $vars)),
    );

    return drupal_render($build);
}

function theme_pcflyerstores_store_link($vars) {
    $store = $vars['store'];
    $attributes = $vars['attributes'];
    $attributes['class'][] = 'pcflyerstores-store-link';
    $attributes['class'][] = 'button';
    $attributes['id'] = 'store_id_'.$store->id;

    $build = array();

    if ($store) {
        $url = 'storesinfo/' . $store->id;
        if ($attributes['disabled']) {
            $url = '';
        }

        if (isset($vars['title']) && $vars['title']) {
            $title = $vars['title'];
        } else {
            $title = $store->name;
        }

        $build['link'] = array('#markup' => l($title, $url, array('attributes' => $attributes)));
    }
    return drupal_render($build);
}

function pcflyerstores_picker_js_storeinfo_callback($id) {
    $store = \printconnect\Stores\Factory::Get($id);
    $store->EnsureLoaded();
    $vacations = $store->vacations;
    if ($vacations !== null) {
        $cart = \printconnect\Carts\Factory::Current();
        $expectedDeliveryDate = $cart->expectedDeliveryDate;
        $onVacation = false;
        foreach ($store->vacations as $vacation) {
            $startDate = $vacation->startDate;
            $endDate = $vacation->endDate;
            if ($expectedDeliveryDate > $startDate && $expectedDeliveryDate < $endDate) {
                $onVacation = true;
                break;
            }
        }

      if (!$onVacation) {
            $link = array(
                '#theme' => 'pcflyerstores_store_link',
                '#title' => t('Select this pickup point'),
                '#store' => $store,
            );
        }
    } else {
        $link = array(
            '#theme' => 'pcflyerstores_store_link',
            '#title' => t('Select this pickup point '),
            '#store' => $store,
        );
    }

    $detail = array(
        '#theme' => 'pcflyerstores_store_info',
        '#store' => $store,
    );
   

    drupal_json_output(array(
        'id' => $id,
        'countryCode' => $store->country,
        'link' => drupal_render($link),
        'detail' => drupal_render($detail),
    ));

}

function pcflyerstores_picker_js_callback($countryCode, $region) {
    $map = _pcflyerstores_formitems();
    $result['map'] = drupal_render($map);
    $stores =  $_SESSION["stores"];
    $items = array();
    foreach ($stores as $store) {

        $item = array();
        $item['summary'] = array(
            '#theme' => 'pcflyerstores_store_summary',
            '#store' => $store,
            '#selectable' => TRUE,
        );

        $items[] = array(
            'data' => drupal_render($item), 
            'id' => $store->id,
        );
    }
    $list = array(
        '#theme' => 'item_list',
        '#items' => $items,
    );

    $result['items'] = $items;
    $result['info'] = drupal_render($info);

    $result['list'] = drupal_render($list);
    print drupal_json_output($result);
    exit;
}

function _pcflyerstores_formitems() {
    $zipcod  = \printconnect\Stores\Factory::pcflyerstores_zipcode();
    $location = \printconnect\Stores\Factory::pcflyerstores_location();
    $stores = $_SESSION["stores"];
    $storepwithPositions = array();
    $thepo = 0;
    foreach ($stores as $key => $store) {
        if ($store->latitude != null) {
	    $openHours = null;
	    foreach($store->openingHours as $key => $openHour) {
		$openHours[t($key)] = $openHour;
	    }
            $storepwithPositions['data'][$store->id] = array(
                'name' => $store->name,
                'phone' => $store->phone,
                'info' => $store->info,
                'latitude' => $store->latitude,
                'longitude' => $store->longitude,
                'postalCode' => $store->postalCode,
		'openingHours' => $openHours,
		'vacations' => $store->vacations,
		'fax' => $store->fax,
		'email' => $store->email,
		'address' => $store->addressString,
		'thepo' => $thepo
            );
	    $thepo++;
        }
    }
     
    $cart = printconnect\Carts\Factory::Current();
    $info = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('detail')),
        'default' => array(
            '#type' => 'container',
            '#attributes' => array('class' => array('default')),
            'html' => array(
                '#markup' => '<div id="map-canvas" style= "height:100%;"></div>
                 <p id="jsonContainer" style="display:none;">'.json_encode($storepwithPositions).'</p>
                 <p id="zipcod" style="display:none;">'.json_encode($zipcod).'</p>
                 <p id="location" style="display:none;">'.json_encode($location).'</p>
		 <p id="storeLink" style="display:none;">'.t('storeLink').'</p>
		 <p id="selectStore" style="display:none;">'.t('selectStore').'</p>
		 <p id="cartDate" style="display:none;">'.$cart->expectedShippingDate.'</p>'
            ),
        ),
    );
    return array($info);
}

function theme_pcflyerstores_landingpage_info($vars) {

    $store = $vars['store'];
    $attributes = $vars['attributes'];
    $attributes['class'][] = 'store';
    $attributes['class'][] = 'clearfix';
    $html = '<div ' . drupal_attributes($attributes) . '>';/* div attributes */
    if ($store) {
        $store->EnsureLoaded();
            $storepwithPositions = array();
            $storepwithPositions['data'][$store->id] = array(
                'name' => $store->name,
                'phone' => $store->phone,
                'info' => $store->info,
                'latitude' => $store->latitude,
                'longitude' => $store->longitude,
                'postalCode' => $store->postalCode,
            );
        $html .= '<div>'; /* start div */

 if (!empty($store->slide)) {
    
        $html .= '<div class="wrapper">
            <div class="jcarousel-wrapper">
                <div data-jcarousel="true" data-wrap="circular" class="jcarousel">
                    <ul>
                <li><img src="'.$store->slide[0].'" alt="" /></li>
                <li><img src="'.$store->slide[1].'" alt="" /></li>
                <li><img src="'.$store->slide[2].'" alt="" /></li>
                <li><img src="'.$store->slide[3].'" alt="" /></li>
                    </ul>
                </div>
                <a data-jcarousel-control="true" data-target="-=1" href="#" class="jcarousel-control-prev">&lsaquo;</a>
                <a data-jcarousel-control="true" data-target="+=1" href="#" class="jcarousel-control-next">&rsaquo;</a>
            </div>
        </div>';
      } else {
       $html .='<img src="http://d4e7wxbvl20c1.cloudfront.net/images.flyer.eu/flyerstore/benl_flyerstoreheader.gif" alt="" style=" height: 142px; ">';
     }


        if (isset($store->photo)) {
            $html .= '<img class="thumb" id="storethumbok" src="'.$store->photo.'">';
        } else {
            $html .='<div id="storethumb"></div>';
        }

        if (!empty($store->shortDescription)) {
            $html .= '<div id="infoStor"><h2>' . t('who we are') .'</h2>'. $store->shortDescription . '</div>';
        } else {
            $html .= '<div id="infoStor"><h2>' . t('who we are') .'</h2>'.t(' short Description not valable   ') . '</div>';
        }
        $html .= '<hr style="height: 2px; color: #F0F0F0; background-color: #F0F0F0; width: 100%; border: none;">  ';
        
         if (!empty($store->longDescription)) {
            $html .= '<div id="infoStor"><h2>' . t('our services') .'</h2>' . $store->longDescription . '</div>';
        } else {
            $html .= '<div id="infoStor"><h2>' . t('our services') .'</h2>'. t(' long Description  not valable') . '</div>';
        }
        $html .= '<hr style="height: 2px; color: #F0F0F0; background-color: #F0F0F0; width: 100%; border: none;">  ';
       
        if (isset($store->contactName)) {
            $html .= '<div class="contact">' . htmlentities($store->contactName) . '</div>';
        }

        if (isset($store->name)) {
            $html .= '<h2>' . t('contact us') . '</h2>';
        }
       
        
        $html .= '<div id="DetailStor">'; /* start div DetailStor */
        if (isset($store->address) && isset($store->postalCode) && isset($store->city)) {
            $html .= '<div class="address">' . t($store->address) . ' - ' . $store->postalCode . ' ' . $store->city . '</div>';
        }
        if (isset($store->phone)) {
            $html .= '<div class="phone">' . htmlentities($store->phone) . '</div>';
        }
        if (isset($store->fax)) {
            $html .= '<div class="fax">' . htmlentities($store->fax) . '</div>';
        }
        if (isset($store->email)) {
            $html .= '<div class="email"><a href="mailto:'.$store->email.'">' . htmlentities($store->email) . '</a></div>';
        }
        $html .= '</div>'; /* End div DetailStor */
        
        $rows = array(); /* start div openingHours */
        if (isset($store->openingHours)) {
            foreach ($store->openingHours as $day => $hours) {
                if ($hours) {
                    $rows[] = array(t($day), $hours);
                }
            }

            if (count($rows)) {
                $html .= theme(
                    'table', array(
                    'rows' => $rows,
                    'caption' => t('Opening hours'),
                    'attributes' => array(
                        'class' => array(
                            'openinghours'
                        )
                    )
                        )
                );
            }
        } /* End div openingHours */
        
        /* start div map-canvas */
     $html .= '<div id="Mapimg" position="'.$store->latitude.'_'.$store->longitude.'">';
        /*if (isset($store->country) && isset($store->city) && isset($store->address)) {
            $googleMapsAddressString = urlencode($store->country) . ',' . urlencode($store->city) . ',' . urlencode($store->address);
            $link = 'http://maps.google.com/maps?q=' . $googleMapsAddressString;
            $icon = file_create_url(drupal_get_path('module', 'pcflyerstores') . '/store.png') . '?' . variable_get('css_js_query_string', '');
            $map = theme('image', array('path' => 'https://maps.googleapis.com/maps/api/staticmap?size=250x360&sensor=false&markers=icon:' . $icon . '|' . $googleMapsAddressString, 'attributes' => array('class' => array('landingmap'))));
            $html .= l($map, $link, array('html' => true, 'attributes' => array('target' => '_blank', 'class' => 'mapContainer')));
        }*/
        $html .= '</div>';
         
        /* end div map-canvas */
        
        $html .= '</div>'; /* End div */
    }

    $html .= '</div>'; /* End div attributes */
 
    return $html;
}


/*function fo alter modules
* using : 
* pcflyerstores_picker_link 
* pcflyerstores_store_info
*/

function pcflyerstores_form_pccart_cart_form2_alter(&$form, &$form_state) {
 
    $typeId = FALSE;
    
    $form['pcflyerstores']['id'] = array(
        '#type' => 'hidden',
        '#default_value' => FALSE,
        '#attributes' => array('class' => array('pcflyerstores', 'id')),
    );

    $cart = $form_state['storage']['cart'];
    $selectedOption = $form_state['values']['cart']['shipping']['type'];
    if ($cart) {
        if (isset($form_state['values']['cart']['shipping']['type'])) {
            $currentType = $form_state['values']['cart']['shipping']['type'];
            
        } else {
            $currentType = $cart->orderItemShipping->shippingTypeResellerShop;
        }

        if (isset($form_state['storage']['shipping']['types']) || $_SESSION['defaultindex'] == 134 ){
     
            $types = $form_state['storage']['shipping']['types'];
            foreach ($types as $type) {
             
                if ($type->shippingType->type == 'shippingTypeStore') {
                    $typeId = $type->id;
                }
            }
            
            if($_SESSION['defaultindex'] == 134  && $selectedOption == 134  ){
                $currentType =  $_SESSION['defaultindex'];
            }
            if ($currentType == $typeId && isset($form['cart']['shipping']['type']['#options'][$typeId])) {
                
                
                $store = $cart->pickuppoint;
                if ($store) {
                    $id = $store->id;
                } else {
                    $id = FALSE;
                }

                $form['cart']['shipping']['type']['#options'][$typeId]['label'] .= theme('pcflyerstores_picker_link', array('callback' => 'pcflyerstores_callback'));

                $form['cart']['shipping']['pup']['countryCode']['#default_value'] = '';

                $form['cart']['shipping']['pup']['id']['#default_value'] = $id;

                if ($id) {

                    $store = \printconnect\Stores\Factory::Get($id);
                    $form['pcflyerstores']['id']['#default_value'] = $id;
                } else {
                    $store = FALSE;
                }
                $form['cart']['shipping']['type']['#options'][$typeId]['label'] .= '<br/>' . theme('pcflyerstores_store_info', array('store' => $store, 'attributes' => array('class' => array('store', 'clearfix'))));
            }
        }
    }

    $submit = $form['#submit'];
    array_unshift($submit, 'pcflyerstores_pccart_cart_form2_submit');
    $form['#submit'] = $submit;
}

function pcflyerstores_pccart_cart_form2_submit($form, &$form_state) {
    $cart = $form_state['storage']['cart'];
    $id = FALSE;
    if ($cart) {
        if (isset($form_state['values']['cart']['shipping']['type'])) {
            $currentType = $form_state['values']['cart']['shipping']['type'];
        } else {
            $currentType = $cart->orderItemShipping->shippingTypeResellerShop;
        }

        if (isset($form_state['storage']['shipping']['types'])) {
            $types = $form_state['storage']['shipping']['types'];
            foreach ($types as $type) {
                if ($type->shippingType->type == 'shippingTypeStore') {
                    $typeIdStore = $type->id;
                } elseif ($type->shippingType->type == 'shippingTypePrinter') {
                    $typeIdPrinter = $type->id;
                }
            }
            switch ($currentType) {
                case $typeIdStore:
                    $id = $form_state['values']['pcflyerstores']['id'];
                    break;
                case $typeIdPrinter:
                    $id = 22;
                    break;
            }

            if ($id) {
                $store = \printconnect\Stores\Factory::Get($id);
                $store->EnsureLoaded();

                $cart->pickuppoint = $store->cartObject;
            } else {
                $cart->pickuppoint = FALSE;
            }

            $form_state['storage']['cart'] = $cart;
        }
    }
}

function pcflyerstores_form_pccheckout_invoiceanddelivery_form_alter(&$form, &$form_state) {

    $cart = $form_state['storage']['cart'];
    $customer = $form_state['storage']['customer'];

    $form['pcflyerstores']['id'] = array(
        '#type' => 'hidden',
        '#default_value' => FALSE,
        '#attributes' => array('class' => array('pcflyerstores', 'id')),
    );

    if ($form_state['storage']['shippingType'] == 'shippingTypeStore' ||
            $form_state['storage']['shippingType'] == 'shippingTypePrinter') {



        if (isset($cart->pickuppoint) && isset($cart->pickuppoint->id)) {
            $store = \printconnect\Stores\Factory::Get($cart->pickuppoint->id);
            $form['pcflyerstores']['id']['#default_value'] = $cart->pickuppoint->id;
        } else {
            $store = FALSE;
        }

        $form['summary']['shipping']['selected'] = array(
            '#theme' => 'pcflyerstores_store_info',
            '#store' => $store,
            '#attributes' => array('class' => array('store', 'clearfix')),
            '#weight' => 100,
        );
        if ($form_state['storage']['shippingType'] == 'shippingTypeStore') {

            $form['shipping']['detail']['change'] = array(
                '#theme' => 'pcflyerstores_picker_link',
                '#callback' => 'pcflyerstores_callback',
                '#attributes' => array('class' => array('button')),
            );
        }

        unset($form['shipping']['detail']['current']);

        $form['shipping']['detail']['contact'] = array(
            '#type' => 'textfield',
            '#title' => t('Who will pick up your print work?'),
            '#required' => TRUE,
            '#default_value' => isset($cart->pickuppoint) && isset($cart->pickuppoint->contactName) ? $cart->pickuppoint->contactName : ($customer ? $customer->name : ''),
            '#size' => 30,
        );
        $form['shipping']['detail']['phone'] = array(
            '#type' => 'textfield',
            '#title' => t('SMS'),
            '#default_value' => isset($cart->pickuppoint) && isset($cart->pickuppoint->contactPhone) ? $cart->pickuppoint->contactPhone : ($customer ? $customer->phone : ''),
            '#size' => 30,
        );
        $form['shipping']['detail']['email'] = array(
            '#type' => 'textfield',
            '#title' => t('Email'),
            '#default_value' => isset($cart->pickuppoint) && isset($cart->pickuppoint->contactEmail) ? $cart->pickuppoint->contactEmail : ($customer ? $customer->email : ''),
            '#size' => 30,
        );
        $form['shipping']['detail']['submit'] = array(
            '#type' => 'submit',
            '#value' => t('Save'),
            '#name' => 'shipping_address_submit',
            '#validate' => array('pcflyerstores_invoiceanddelivery_form_shipping_validate'),
            '#submit' => array('pcflyerstores_invoiceanddelivery_form_shipping_submit'),
        );
    }

    $form['#validate'][] = 'pcflyerstores_pccheckout_invoiceanddelivery_form_validate';
}

function pcflyerstores_pccheckout_invoiceanddelivery_form_validate($form, &$form_state) {
    if ($form_state['storage']['shippingType'] == 'shippingTypeStore' ||
            $form_state['storage']['shippingType'] == 'shippingTypePrinter') {
        if (!isset($form_state['values']['pcflyerstores']['id']) || !$form_state['values']['pcflyerstores']['id']) {
            form_set_error('', t('Please select a pickup point'));
        }
    }
}

function pcflyerstores_invoiceanddelivery_form_shipping_validate($form, &$form_state) {
    $cart = $form_state['storage']['cart'];
    if (!isset($form_state['values']['pcflyerstores']['id']) || !$form_state['values']['pcflyerstores']['id']) {
        form_set_error('', t('Please select a pickup point'));
    }
}

function pcflyerstores_invoiceanddelivery_form_shipping_submit($form, &$form_state) {
    $cart = $form_state['storage']['cart'];
    $store = \printconnect\Stores\Factory::Get($form_state['values']['pcflyerstores']['id']);
    $store->EnsureLoaded();
    $cart->pickuppoint = $store->cartObject;
    $cart->pickuppoint->contactName = $form_state['values']['shipping']['detail']['contact'];
    $cart->pickuppoint->contactEmail = $form_state['values']['shipping']['detail']['email'];
    $cart->pickuppoint->contactPhone = $form_state['values']['shipping']['detail']['phone'];
    \printconnect\Carts\Factory::Save($cart);
}

function pcflyerstores_form_pccheckout_shipping_form_alter(&$form, &$form_state) {
    $cart = $form_state['storage']['cart'];
    $customer = $form_state['storage']['customer'];

    $form['pcflyerstores']['id'] = array(
        '#type' => 'hidden',
        '#default_value' => FALSE,
        '#attributes' => array('class' => array('pcflyerstores', 'id')),
    );

    if ($form_state['storage']['shippingType'] == 'shippingTypeStore' ||
            $form_state['storage']['shippingType'] == 'shippingTypePrinter') {
        if (isset($cart->pickuppoint) && isset($cart->pickuppoint->id)) {
            $store = \printconnect\Stores\Factory::Get($cart->pickuppoint->id);
            $form['pcflyerstores']['id']['#default_value'] = $cart->pickuppoint->id;
        } elseif (isset($form_state['values']['pcflyerstores']['id']) && $form_state['values']['pcflyerstores']['id']) {
            $store = \printconnect\Stores\Factory::Get($form_state['values']['pcflyerstore']['id']);
            $form['pcflyerstores']['id']['#default_value'] = $form_state['values']['pcflyerstore']['id'];
        } else {
            $store = FALSE;
        }

        $form['shipping']['pickup']['selected'] = array(
            '#theme' => 'pcflyerstores_store_info',
            '#store' => $store,
            '#attributes' => array('class' => array('store', 'clearfix')),
        );
        $form['shipping']['pickup']['change'] = array(
            '#theme' => 'pcflyerstores_picker_link',
            '#callback' => 'pcflyerstores_callback',
            '#attributes' => array('class' => array('button')),
        );
    }

    $form['#validate'][] = 'pcflyerstores_pccheckout_shipping_form_validate';
}

function pcflyerstores_pccheckout_shipping_form_validate($form, &$form_state) {
    if ($form_state['storage']['shippingType'] == 'shippingTypeStore' ||
            $form_state['storage']['shippingType'] == 'shippingTypePrinter') {
        if (!isset($form_state['values']['pcflyerstores']['id']) || !$form_state['values']['pcflyerstores']['id']) {
            form_set_error('', t('Please select a pickup point'));
        }
    }
}
function pcflyerstores_picker_callback($id) {
    $cart = \printconnect\Carts\Factory::Current();
    if ($cart) {
        $store = \printconnect\Stores\Factory::Get($id);
        $store->EnsureLoaded();
        $cart->pickuppoint = $store->cartObject;
        \printconnect\Carts\Factory::Save($cart);
    }

    $link = array(
        '#theme' => 'pcflyerstores_store_link',
        '#store' => $store,
    );

    $info = array(
        '#theme' => 'pcflyerstores_store_info',
        '#store' => $store,
    );



    drupal_json_output(array(
        'id' => $id,
        'countryCode' => $store->country,
        'link' => drupal_render($link),
        'info' => drupal_render($info),
    ));
    exit;
}
