<?php
use \printconnect\Dal;
use printconnect\Orders\Factory;
function pcretour_menu() {
  $items = array();
  $items['retour'] = array( 
    'title' => '', //page title
    'description' => 'qseqfqzsef',
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('pcretour_form'), //put the name of the form here
    'access callback' => TRUE
  );
  $items['retour/order/%'] = array(
      'title' => '',
      'page callback' => '_pcretour_order_callback',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
   $items['verifysend'] = array( 
    'title' => '', //page title
    'description' => '',
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('pcretour_form_verifysend'), //put the name of the form here
    'access callback' => TRUE
  );
  return $items;
}
function pcretour_form_verifysend(){
    if($_SESSION['messagesRetour']) {
        echo $_SESSION['urlPDF'];
        unset($_SESSION['messagesRetour']);
        unset($_SESSION['urlPDF']);
    }
    die;
}
function pcretour_form($form, &$form_state) {
    $form['retour'] = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('complaint')),
    );
    $form['retour']['form'] = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('complaintform')),
    );
    
    //bloc order identification
    $form['retour']['form']['order'] = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('bloccomplaint')),
    );
    $form['retour']['form']['order']['titleorder'] = array(
        '#markup' => t('title retour'),
        '#prefix' => '<h3>',
        '#suffix' => '</h3>', 
    );
    $form['retour']['form']['order']['labelorder'] = array(
        '#markup' => t('labelorder')."<span> *</span>",
        '#prefix' => '<div class="identification"><div class="labelorder">',
        '#suffix' => '</div>', 
    );
    $form['retour']['form']['order']['orderid'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('required'), 'placeholder' => t('orderid')),
    );
    
    $form['retour']['form']['order']['jobid'] = array(
        '#markup' =>'<select id="edit-jobid" name="jobid"></select>',
//        '#attributes' => array('placeholder' => t('jobnumber')),
    );
// $form['retour']['form']['order']['jobid'] = array(
//        '#type' => 'select',
//        '#options' => array('0'),
//        '#attributes' => array('class' => array('select-city-adress'), 'placeholder' => t('')),
//        
//    );

    $form['retour']['form']['order']['errorMsg'] = array(
        '#markup' => "<span id='errorMsg'></span>",
    );

    $form['retour']['form']['order']['txtJobId'] = array(
        '#markup' => "<span class='txtJobId'>".t('txtJobId')."</span>",
        '#suffix' => '</div>',
    );
    
    //your adress
    $form['retour']['form']['youradress'] = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('bloccomplaint')),
    );
    $form['retour']['form']['youradress']['titleorder'] = array(
        '#markup' => t('your adress retour'),
        '#prefix' => '<h3>',
        '#suffix' => '</h3>', 
    );
    //line 1
    $form['retour']['form']['youradress']['labelstreet'] = array(
        '#markup' => t('labelstreet')."<span> *</span>",
        '#prefix' => '<div class="youradress"><div class="labelorder">',
        '#suffix' => '</div>', 
    );
    $form['retour']['form']['youradress']['street'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('required'), 'placeholder' => t('street')),
    );
    $form['retour']['form']['youradress']['labelnumber'] = array(
        '#markup' => t('labelnumber')."<span> *</span>",
        '#prefix' => '<div class="labelorderleft">',
        '#suffix' => '</div>', 
    );
    $form['retour']['form']['youradress']['number'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('required'), 'placeholder' => t('number')),
        '#suffix' => '</div>',
    );
    //line 2 
      $form['retour']['form']['youradress']['labelcity'] = array(
        '#markup' => t('labelcity')."<span> *</span>",
        '#prefix' => '<div class="identification"><div class="labelorder">',
        '#suffix' => '</div>', 
    );
    $form['retour']['form']['youradress']['city'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('required'), 'placeholder' => t('cityretour')),
    );
    $form['retour']['form']['youradress']['labelpostalcode'] = array(
        '#markup' => t('postalcodeL')."<span> *</span>",
        '#prefix' => '<div class="labelorderleft">',
        '#suffix' => '</div>', 
    );
    $form['retour']['form']['youradress']['postalcode'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('required'), 'placeholder' => t('postalcode')),
    );

    $form['retour']['form']['youradress']['errorMsg'] = array(
        '#markup' => "<span id='errorMsg'></span>",
        '#suffix' => '</div>',
    );  

    //RETURN SENDING
    $form['retour']['form']['numberbox'] = array(
        '#type' => 'container',
        '#attributes' => array('class' => array('bloccomplaint')),
    );
    $form['retour']['form']['numberbox']['sending'] = array(
        '#markup' => t('return sending'),
        '#prefix' => '<h3>',
        '#suffix' => '</h3>', 
    );
    $form['retour']['form']['numberbox']['numberboxlabel'] = array(
        '#markup' => t('number of boxes'),
        '#prefix' => '<div class="compensation"><div class="labelorder">',
        '#suffix' => '</div>', 
    );
//    $options = array (
//        
//        "1"=>t('1'),
//         "2"=>t('2'),
//        "3"=>t('3'),
//         "4"=>t('4'),
//        "5"=>t('5'),
//         "6"=>t('6'),
//        "7"=>t('7'),
//         "8"=>t('8'),
//        "9"=>t('9'),
//         "10"=>t('10')
//    );
    $form['retour']['form']['numberbox']['numberboxselect'] = array(
        '#type' => 'textfield',
        '#attributes' => array( 'readonly' => 'readonly'),
        '#suffix' => '</div>', 
    );
    
        
       //drupal_add_js('jQuery("#edit-submit").attr("action","/download.php?product="+pdfProduct)');
        $form['retour']['form']['message'] = array(
            '#markup' => "<div class='complaintSuccess'>"
            . "<p>".t('retourSuccess text')."</p>"
            . "<p class='questions'>".t('retourquestionsTxt')."</p>"
            . "<p class='urlPDF'><a id='link_pdf' target='_blank' href='".$_SESSION['urlPDF']."'>".$_SESSION['urlPDF']."</a></p>"
          
              
            . "</div>"
        );
        //drupal_add_js('jQuery(document).ready(function(){jQuery("<form>Test</form>").appendTo(".complaintSuccess").attr("action","'.$_SESSION['urlPDF'].'").attr("target","_blank").submit()})', 'inline');
      
  
    
        $form['retour']['form']['submit'] = array(
            '#type' => 'submit',
            '#value' => t('submit form retour'),
            '#prefix' => '<div class="complaintSubmit">',
            '#suffix' => '</div>',       
          );
    
     $form['#attributes']['target'] = '_blank';
  return $form;
}

function pcretour_form_validate($form, &$form_state) {
   
}
function pcretour_form_submit($form, &$form_state) {
    pcretour_notify($form_state, 'flyermailer@gmail.com');    
}
function pcretour_notify($form_state, $mailto) {
    $params = array();    
    $order = \printconnect\Orders\Factory::Get($form_state["values"]["orderid"], false);
    $customer = \printconnect\Customers\Factory::Get($order->customer);   
    $params['firstName'] = $customer->firstName;
    $params['email'] = $customer->email;
    $params['phone'] = $customer->phone;
    $orderId = $form_state['values']['orderid'];
    $url = "http://admin.printconcept.com/order/index/order/".$orderId;
    $params['url'] = $url;
    $params['orderId'] = $orderId;
    //$params['jobid'] = $form_state['values']['jobid'];
    $params['jobid'] = $_POST['jobid'];
    $params['street'] = $form_state["values"]["street"];
    $params['number'] = $form_state["values"]["number"];
    $params['city'] = $form_state["values"]["city"];
    $params['postalcode'] = $form_state["values"]["postalcode"];
    $params['numberboxselect'] = $form_state['values']['numberboxselect'];
     
    //drupal_mail('pccomplaint', 'notice', $from, NULL, $params);
    $subject = t('RetourSubject').' '.$params['orderId'];
    $message = '<br/><b>' . t('Retour mail') . '</b>: ';
    $message .= '<br/><b>' . t('Ordernumber') . '</b>: ';
    $message .= $params['orderId'];
    $message .= '<br/><b>' . t('jobid') . '</b>: <br/>';
    $message .= $params['jobid'];
    $message .= '<br/><b>' . t('Sender Addess') . '</b>: ';
    $message .= '<br/><b>' . t('Street') . '</b>: ';
    $message .= $params['street'];
    $message .= '<br/><b>' . t('Number') . '</b>: ';
    $message .= $params['number'];
    $message .= '<br/><b>' . t('Postal code') . '</b>: ';
    $message .= $params['postalcode'];
    $message .= '<br/><b>' . t('city') . '</b>: ';
    $message .= $params['city'];
    $message .= '<br/><b>' . t('Country') . '</b>: ';
    $message .= t('belgium');
    $message .= '<br/><b>' . t('Number of boxes') . '</b>: ';
    $message .= $params['numberboxselect'];
    $message .= '<br/><b>' . t('firstName') . '</b>: '; 
    $message .= $params['firstName'];
    $message .= '<br/><b>' . t('Phone') . '</b>: ';
    $message .= $params['phone'];
    if (isset($params['email'])) {
      $message .= '<br/><b>' . t('Email') . '</b>: ';
      $message .= $params['email'];
    }
    $message .= '<br/><b>' . t('url') . '</b>: ';
    $message .= $params['url'];
    
    $apikey = variable_get('pc_apikey');
    $url = variable_get('pc_url') . "label";
    $ps = "orderId=".$orderId."&jobId=".$params['jobid']."&boxes=".$params['numberboxselect']."&address[]=".urlencode($params['street'])."&address[]=".$params['number']."&address[]=".$params['postalcode']."&address[]=".$params['city']."&apikey=".$apikey."&language=13";
  
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS,$ps);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $server_output = curl_exec($ch);
    $result = json_decode($server_output);

    $arrayTracking = $result->trackingLinks;
    foreach ($arrayTracking as  $linkTracking) {
        $message .= '<br/><b>' . t('url') . '</b>: '.$linkTracking;
    }
  
    mail_retour($mailto,  $params['firstName'],$subject, $message, $orderId);
    $_SESSION['urlPDF'] = $result->labelUrl;
 //   drupal_add_js('window.open(\'' . $result->labelUrl . '\')', 'inline');
   
    drupal_goto( $result->labelUrl);  
    
}
function mail_retour($mailto, $from_name, $subject, $message, $orderId) {
       
    $mail = new PHPMailer;
    $mail->SMTPDebug = 3;                               // Enable verbose debug output

    $mail->isSMTP();                                      // Set mailer to use SMTP
    $mail->Host = 'smtp.gmail.com';  // Specify main and backup SMTP servers
    $mail->SMTPAuth = true;                               // Enable SMTP authentication
    $mail->Username = 'flyermailer@gmail.com';                 // SMTP username
    $mail->Password = 'flyer567%';                           // SMTP password
    $mail->SMTPSecure = 'tls';                            // Enable TLS encryption, `ssl` also accepted
  //  $mail->Port = 465; 
    $mail->Port = 587;  // TCP port to connect to
    $mail->setFrom($mailto, t('Retour flyer'));
    $mail->addAddress($mailto, 'Joe User');     // Add a recipient
  
    $mail->isHTML(true);                                  // Set email format to HTML
    $mail->Subject = $subject;
    $mail->Body    = $message;
    //$mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

    if(!$mail->send()) {
        echo 'Message could not be sent.';
        echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            echo 'Message has been sent';
            $_SESSION['messagesRetour'] = 'yes';        
        }        
}

 function _pcretour_order_callback($order){
    $response = Factory::GetOrderJson($order);
  //  var_dump($form_state);die('yyyyy');
    if($response) {
        Dal::BuildJson($response->data);
    }else {
        Dal::BuildJson(array(), 500);
    }
    
}